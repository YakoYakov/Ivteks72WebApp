@page
@inject UserManager<Ivteks72.Domain.ApplicationUser> UserManager
@inject SignInManager<Ivteks72.Domain.ApplicationUser> SignInManager

@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}

@model IndexModel
@{
    ViewData["Title"] = "Profile of:";
    ViewData["ActivePage"] = ManageNavPages.Index;
}

<h4>@ViewData["Title"]</h4>
<partial name="_StatusMessage" for="StatusMessage" />
<span class="active">@UserManager.GetUserName(User)</span>
<p> </p>
<div class="col-auto">
    <div>
        @if (hasExternalLogins)
        {
            <a class="btn btn-dark text-info" asp-page="SetPassword" role="button">Set Password</a>
            <a class="btn btn-primary" asp-page="PersonalData" role="button">Personal Data</a>
        }
        else
        {
            <a class="btn btn-primary" asp-page="ChangePassword" role="button">Change Password</a>
            <a class="btn btn-primary" asp-page="PersonalData" role="button">Personal Data</a>
        }
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}