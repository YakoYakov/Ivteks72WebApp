@using Ivteks72.App.Pagination

@model PaginatedList<Ivteks72.App.Models.Invoice.InvoiceViewModel>

@{
    ViewData["Title"] = "InvoiceIndex";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1 class="jumbotron justify-content-lg-between text-center">Invoices</h1>

<table class="table table-striped text-center">
    <thead>
        <tr>
            <th>
                BIlled To
            </th>
            <th>
                Company Name
            </th>
            <th>
                For Clothing
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @for (int i = 0; i < Model.Count; i++)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => Model[i].BIlledToUser)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => Model[i].CompanyName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => Model[i].ClothingName)
                </td>
                <td>
                    <span class="btn btn-dark text-sm-center">@Html.ActionLink("Details", "InvoiceDetails", new { id = Model[i].Id }) </span>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="ViewAllOrders"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-dark @prevDisabled">
    Previous
</a>
<a asp-action="ViewAllOrders"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-dark @nextDisabled">
    Next
</a>